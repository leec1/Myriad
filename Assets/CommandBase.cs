//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
namespace AssemblyCSharp
{
	public sealed class CommandBase
	{
		private static readonly CommandBase instance = new CommandBase();

		private Player currentCommander = null;

		private bool isOccupied = false;

		private int currentHealth;
		private int maxHealth;

		public CommandBase (){
			initializeCommandBase ();
		}

		private void initializeCommandBase() {
			maxHealth = 100;
			currentHealth = 0;
		}

		public static CommandBase Instance {
			get {
				return instance;
			}
		}

		public void resetCommandBase(){
			initializeCommandBase();
		}

		public bool enter( Player newCommander )
		{
			bool success = false;
			if ( !instance.currentCommander.Equals( newCommander ) ) {
				if ( !instance.isOccupied || instance.currentCommander.promptLeaveCommander() ) {
					lock (instance)
					{
						instance.currentCommander = newCommander;
						instance.isOccupied = true;
					}
					success = true;
				}
			}
			return success;
		}

		public bool leave( Player oldCommander )
		{
			bool success = false;
			if (instance.currentCommander.Equals ( oldCommander ) ){
				lock (instance) {
					instance.currentCommander = null;
					instance.isOccupied = false;
				}
				success = true;
			}

			return success;
		}
	}
}

